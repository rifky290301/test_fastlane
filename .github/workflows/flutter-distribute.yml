name: Build & Distribute Flutter APK via Firebase

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: 'Build type (apk or aab)'
        required: true
        default: 'apk'
        type: choice
        options:
          - apk
          - aab

jobs:
  build:
    runs-on: ubuntu-latest  # Cloud-hosted runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'  # Sesuaikan versi kamu

      - name: Restore .env.development from secret
        run: |
          echo "${{ secrets.ENV_DEVELOPMENT }}" | base64 --decode > .env.development
        shell: bash

      - name: Create GCP credentials JSON
        run: |
          echo '${{ secrets.GCP_CREDENTIALS_JSON }}' > $GITHUB_WORKSPACE/assets/credentials/development/google_cloud.json

      - name: Install dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=release.keystore" >> android/key.properties

      - name: Build Android APK/AAB
        run: |
          if [ "${{ github.event.inputs.buildType }}" == "apk" ]; then
            flutter build apk --release
          else
            flutter build appbundle --release
          fi

      - name: Setup Google Application Credentials
        run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS }}' > ${{ runner.temp }}/firebase-service-account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ runner.temp }}/firebase-service-account.json" >> $GITHUB_ENV

      - name: Install Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash

      - name: Distribute APK to Firebase
        run: |
          firebase appdistribution:distribute ${{ github.event.inputs.buildType == 'apk' && 'build/app/outputs/flutter-apk/app-release.apk' || 'build/app/outputs/bundle/release/app-release.aab' }} \
            --app "1:784716769060:android:1613a12ff9192942be75b1" \
            --release-notes "Distribusi otomatis dari GitHub Actions" \